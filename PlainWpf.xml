<?xml version="1.0"?>
<doc>
    <assembly>
        <name>PlainWpf</name>
    </assembly>
    <members>
        <member name="T:PlainWpf.ViewModels.CsXmlCommentReader">
            <summary>
            
            </summary>
        </member>
        <member name="M:PlainWpf.ViewModels.CsXmlCommentReader.#ctor(System.String,System.Action{System.String},System.Action{System.String},System.Action{System.String,System.String},System.Action{System.String})">
            <summary>
            ToDo
            </summary>
            <param name="filePath"></param>
            <param name="readElement"></param>
            <param name="endElement"></param>
            <param name="readAttribute"></param>
            <param name="readText"></param>
        </member>
        <member name="M:PlainWpf.ViewModels.CsXmlCommentReader.Read(System.String)">
            <summary>
            ToDo
            </summary>
            <param name="filePath"></param>
            <returns>非同期のTaskハンドラ</returns>
        </member>
        <member name="M:PlainWpf.ViewModels.CsXmlCommentReader.ReadXml">
            <summary>
            ToDo
            </summary>
            <returns></returns>
        </member>
        <member name="T:PlainWpf.ViewModels.CsXmlCommentReaderException">
            <summary>
            
            </summary>
        </member>
        <member name="M:PlainWpf.ViewModels.CsXmlCommentReaderException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:PlainWpf.ViewModels.SubPage3ViewModel">
            <summary>
            
            </summary>
            <seealso cref="T:Mvvm.BindableBase" />
        </member>
        <member name="T:PlainWpf.ViewModels.XmlTreeViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="M:PlainWpf.ViewModels.XmlTreeViewModel.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:PlainWpf.ViewModels.XmlTreeViewModel.TreeViewItems">
            <summary>
            
            </summary>
        </member>
        <member name="P:PlainWpf.ViewModels.XmlTreeViewModel.DropFile">
            <summary>
            
            </summary>
        </member>
        <member name="T:PlainWpf.Views.SubPage2">
            <summary>
            SubPage1.xaml の相互作用ロジック
            </summary>
            <summary>
            SubPage2
            </summary>
        </member>
        <member name="M:PlainWpf.Views.SubPage2.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PlainWpf.Views.SubPage1">
            <summary>
            SubPage1.xaml の相互作用ロジック
            </summary>
            <summary>
            SubPage1
            </summary>
        </member>
        <member name="M:PlainWpf.Views.SubPage1.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PlainWpf.Views.SubPage3">
            <summary>
            SubPage3.xaml の相互作用ロジック
            </summary>
            <summary>
            SubPage3
            </summary>
        </member>
        <member name="M:PlainWpf.Views.SubPage3.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PlainWpf.Views.SubPage4">
            <summary>
            SubPage4.xaml の相互作用ロジック
            </summary>
            <summary>
            SubPage4
            </summary>
        </member>
        <member name="M:PlainWpf.Views.SubPage4.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PlainWpf.Views.ViewBoxTest">
            <summary>
            ViewBoxTest.xaml の相互作用ロジック
            </summary>
            <summary>
            ViewBoxTest
            </summary>
        </member>
        <member name="M:PlainWpf.Views.ViewBoxTest.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PlainWpf.Views.UserControl1">
            <summary>
            Window1.xaml の相互作用ロジック
            </summary>
            <summary>
            UserControl1
            </summary>
        </member>
        <member name="M:PlainWpf.Views.UserControl1.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PlainWpf.Views.XmlTreeView">
            <summary>
            XmlTreeView.xaml の相互作用ロジック
            </summary>
            <summary>
            XmlTreeView
            </summary>
        </member>
        <member name="M:PlainWpf.Views.XmlTreeView.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PlainWpf.Views.MainWindow">
            <summary>
            MainWindow.xaml の相互作用ロジック
            </summary>
            <summary>
            MainWindow
            </summary>
        </member>
        <member name="M:PlainWpf.Views.MainWindow.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:PlainWpf.App">
            <summary>
            App.xaml の相互作用ロジック
            </summary>
            <summary>
            App
            </summary>
        </member>
        <member name="M:PlainWpf.App.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="M:PlainWpf.App.Main">
            <summary>
            Application Entry Point.
            </summary>
        </member>
        <member name="T:PlainWpf.Properties.Resources">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:PlainWpf.Properties.Resources.ResourceManager">
            <summary>
              このクラスで使用されるキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:PlainWpf.Properties.Resources.Culture">
            <summary>
              厳密に型指定されたこのリソース クラスを使用して、すべての検索リソースに対し、
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
        <member name="T:Behaviors.AlwaysOverrideBehavior">
            <summary>
            
            </summary>
            <remarks><a href="https://stackoverflow.com/questions/619074/wpf-textbox-overwrite">WPF TextBox上書き</a></remarks>
        </member>
        <member name="M:Behaviors.AlwaysOverrideBehavior.GetAlwaysOverride(System.Windows.DependencyObject)">
            <summary>
             Get
            </summary>
            <param name="target">DependencyObject</param>
            <returns>ICommand</returns>
        </member>
        <member name="M:Behaviors.AlwaysOverrideBehavior.SetAlwaysOverride(System.Windows.DependencyObject,System.Boolean)">
            <summary>
             Set
            </summary>
            <param name="target">DependencyObject</param>
            <param name="value">ICommand</param>
        </member>
        <member name="F:Behaviors.AlwaysOverrideBehavior.AlwaysOverrideProperty">
            <summary>
             DependencyProperty
            </summary>
        </member>
        <member name="M:Behaviors.AlwaysOverrideBehavior.OnAlwaysOverrideChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>1
             OnChanged
            </summary>
            <param name="target">DependencyObject</param>
            <param name="e">DependencyPropertyChangedEventArgs</param>
        </member>
        <member name="T:Behaviors.FileDragBehavior">
            <summary>
            ファイルのＤ＆Ｄを受け入れるビヘイビア
            </summary>
        </member>
        <member name="M:Behaviors.FileDragBehavior.GetMultiSelect(System.Windows.DependencyObject)">
            <summary>
            複数ファイルドロップ可能添付プロパティのGetter
            </summary>
            <param name="obj"></param>
            <returns>True=複数可、False=一つのファイルのみ</returns>
        </member>
        <member name="M:Behaviors.FileDragBehavior.SetMultiSelect(System.Windows.DependencyObject,System.Boolean)">
            <summary>
            複数ファイルドロップ可能添付プロパティのSetter
            </summary>
            <param name="obj"></param>
            <param name="value">True=複数可、False=一つのファイルのみ</param>
        </member>
        <member name="F:Behaviors.FileDragBehavior.MultiSelectProperty">
            <summary>
            複数ファイルドロップ可能添付プロパティ
            </summary>
        </member>
        <member name="M:Behaviors.FileDragBehavior.GetDragFileExt(System.Windows.DependencyObject)">
            <summary>
            Ｄ＆Ｄ許可する拡張子をセットする添付プロパティのGetter
            </summary>
            <param name="obj"></param>
            <returns>ドットからの拡張子、コロンセパレータで複数指定可、ワイルドカード指定可</returns>
        </member>
        <member name="M:Behaviors.FileDragBehavior.SetDragFileExt(System.Windows.DependencyObject,System.String)">
            <summary>
            Ｄ＆Ｄ許可する拡張子をセットする添付プロパティのSetter
            </summary>
            <param name="obj"></param>
            <param name="value">ドットからの拡張子、コロンセパレータで複数指定可、ワイルドカード指定可</param>
        </member>
        <member name="F:Behaviors.FileDragBehavior.DragFileExtProperty">
            <summary>
            Ｄ＆Ｄ許可する拡張子をセットする添付プロパティ
            </summary>
        </member>
        <member name="F:Behaviors.FileDragBehavior.FileExtRegex">
            <summary>
            DragFileExtの検証用正規表現
            </summary>
        </member>
        <member name="M:Behaviors.FileDragBehavior.GetDropCommand(System.Windows.DependencyObject)">
            <summary>
            ファイルがドロップされたときに呼び出されるコマンドの添付プロパティのGetter
            </summary>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="M:Behaviors.FileDragBehavior.SetDropCommand(System.Windows.DependencyObject,System.Windows.Input.ICommand)">
            <summary>
            ファイルがドロップされたときに呼び出されるコマンドの添付プロパティのSetter
            </summary>
            <param name="obj"></param>
            <param name="value"></param>
        </member>
        <member name="F:Behaviors.FileDragBehavior.DropCommandProperty">
            <summary>
            ファイルがドロップされたときに呼び出されるコマンドの添付プロパティ
            </summary>
        </member>
        <member name="M:Behaviors.FileDragBehavior.Obj_Drop(System.Object,System.Windows.DragEventArgs)">
            <summary>
            ドロップ時のイベントハンドラ
            </summary>
            <param name="sender">ドロップ先のコントロール</param>
            <param name="e">ドロップパラメータ</param>
        </member>
        <member name="M:Behaviors.FileDragBehavior.Obj_DragOver(System.Object,System.Windows.DragEventArgs)">
            <summary>
            ドラッグ時のイベントハンドラ
            </summary>
            <param name="sender">ドラッグ先のコントロール</param>
            <param name="e">ドラッグパラメータ</param>
        </member>
        <member name="T:Behaviors.FormatTextInputBehavior">
            <summary>
            
            </summary>
        </member>
        <member name="M:Behaviors.FormatTextInputBehavior.GetFormatText(System.Windows.DependencyObject)">
            <summary>
             Get
            </summary>
            <param name="target">DependencyObject</param>
            <returns>ICommand</returns>
        </member>
        <member name="M:Behaviors.FormatTextInputBehavior.SetFormatText(System.Windows.DependencyObject,System.String)">
            <summary>
             Set
            </summary>
            <param name="target">DependencyObject</param>
            <param name="value">ICommand</param>
        </member>
        <member name="F:Behaviors.FormatTextInputBehavior.FormatTextProperty">
            <summary>
             DependencyProperty
            </summary>
        </member>
        <member name="M:Behaviors.FormatTextInputBehavior.OnFormatTextChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
            <summary>1
             OnChanged
            </summary>
            <param name="target">DependencyObject</param>
            <param name="e">DependencyPropertyChangedEventArgs</param>
        </member>
        <member name="T:Controls.ColorSelector">
            <summary>
            Interaction logic for ColorSelector
            </summary>
            <remarks><a href="http://www.losttechnology.jp/WebDesign/colorlist.html">さまざまな色一覧</a></remarks>
            <summary>
            ColorSelector
            </summary>
        </member>
        <member name="M:Controls.ColorSelector.InitializeComponent">
            <summary>
            InitializeComponent
            </summary>
        </member>
        <member name="T:Converters.DateTimeToLongTimeStringConverter">
            <summary>
            System.DateTime convert 'HH:mm:ss' format string
            </summary>
        </member>
        <member name="M:Converters.DateTimeToLongTimeStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>formatted string</returns>
        </member>
        <member name="M:Converters.DateTimeToLongTimeStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>System.DateTime</returns>
            <exception cref="T:System.Exception">
            convert error : value
            or
            convert source error : source is not 'System.String'
            </exception>
        </member>
        <member name="T:Converters.DateTimeToTimeStringConverter">
            <summary>
            System.DateTime convert 'HH:mm' format string
            </summary>
        </member>
        <member name="M:Converters.DateTimeToTimeStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>formatted string</returns>
        </member>
        <member name="M:Converters.DateTimeToTimeStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>System.DateTime</returns>
            <exception cref="T:System.Exception">
            convert error : value
            or
            convert source error : source is not 'System.String'
            </exception>
        </member>
        <member name="T:Converters.DateTimeToDateStringConverter">
            <summary>
            System.DateTime convert 'yyyy/MM/dd' format string
            </summary>
        </member>
        <member name="M:Converters.DateTimeToDateStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>formatted string</returns>
        </member>
        <member name="M:Converters.DateTimeToDateStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>System.DateTime</returns>
            <exception cref="T:System.Exception">
            convert error : value
            or
            convert source error : source is not 'System.String'
            </exception>
        </member>
        <member name="T:Converters.DateTimeToShortDateStringConverter">
            <summary>
            System.DateTime convert 'MM/dd' format string
            </summary>
        </member>
        <member name="M:Converters.DateTimeToShortDateStringConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the specified value.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>formatted string</returns>
        </member>
        <member name="M:Converters.DateTimeToShortDateStringConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
            <summary>
            Converts the back.
            </summary>
            <param name="value">The value.</param>
            <param name="targetType">Type of the target.</param>
            <param name="parameter">The parameter.</param>
            <param name="culture">The culture.</param>
            <returns>System.DateTime</returns>
            <exception cref="T:System.Exception">
            convert error : value
            or
            convert source error : source is not 'System.String'
            </exception>
        </member>
        <member name="T:Converters.DoubleComparisonToBooleanConverter">
            <summary>
            数値を比較して一致以外でもTrueとなる数値&lt;-&gt;Booleanコンバーター
            <br/>
            xamlで Converter=DoubleComparisonToBooleanConverter, ConverterParameter={}{100=&lt;=200} のようにConverterParameterで指定する。
            </summary>
            <remarks>
            左値、右値どちらかがない場合、そちら側の比較はTrueとなる。どちらもない場合はFalse。
            <br/>
            また、左値&lt;右値を期待した動作となる。
            <br/>
            構文
            <br/>
            <i>left double</i>&lt;|=&lt;|&lt;=|=&lt;=<i>right double</i>
            <br/>
            &lt; (<i>left double</i> == null ? true : <i>left double</i> &lt; value) &amp;&amp; (<i>right double</i> == null ? true : value &lt; <i>right double</i>)
            <br/>
            =&lt; (<i>left double</i> == null ? true : <i>left double</i> &lt;= value) &amp;&amp; (<i>right double</i> == null ? true : value &lt; <i>right double</i>)
            <br/>
            &lt;= (<i>left double</i> == null ? true : <i>left double</i> &lt; value) &amp;&amp; (<i>right double</i> == null ? true : value &lt;= <i>right double</i>)
            <br/>
            =&lt;= (<i>left double</i> == null ? true : <i>left double</i> &lt;= value) &amp;&amp; (<i>right double</i> == null ? true : value &lt;= <i>right double</i>)
            <br/>
            '&lt;'はxamlでの指定が面倒なので'@'でも可能。
            <br/>
            ConvertBackはnullを返す。
            </remarks>
        </member>
        <member name="T:Converters.IntegerComparisonToBooleanConverter">
            <summary>
            数値を比較して一致以外でもTrueとなる数値&lt;-&gt;Booleanコンバーター
            <br/>
            xamlで Converter=IntegerComparisonToBooleanConverter, ConverterParameter={}{100=&lt;=200} のようにConverterParameterで指定する。
            </summary>
            <remarks>
            左値、右値どちらかがない場合、そちら側の比較はTrueとなる。どちらもない場合はFalse。
            <br/>
            また、左値&lt;右値を期待した動作となる。
            <br/>
            構文
            <br/>
            <i>left int</i>&lt;|=&lt;|&lt;=|=&lt;=<i>right int</i>
            <br/>
            &lt; (<i>left int</i> == null ? true : <i>left int</i> &lt; value) &amp;&amp; (<i>right int</i> == null ? true : value &lt; <i>right int</i>)
            <br/>
            =&lt; (<i>left int</i> == null ? true : <i>left int</i> &lt;= value) &amp;&amp; (<i>right int</i> == null ? true : value &lt; <i>right int</i>)
            <br/>
            &lt;= (<i>left int</i> == null ? true : <i>left int</i> &lt; value) &amp;&amp; (<i>right int</i> == null ? true : value &lt;= <i>right int</i>)
            <br/>
            =&lt;= (<i>left int</i> == null ? true : <i>left int</i> &lt;= value) &amp;&amp; (<i>right int</i> == null ? true : value &lt;= <i>right int</i>)
            <br/>
            '&lt;'はxamlでの指定が面倒なので'@'でも可能。
            <br/>
            ConvertBackはnullを返す。
            </remarks>
        </member>
        <member name="T:Extensions.RegexStringExtensions">
            <summary>
            正規表現パターン用String拡張関数
            </summary>
        </member>
        <member name="M:Extensions.RegexStringExtensions.MatchPossibleStringToUnMatchString(System.String)">
            <summary>
            プレーン文字列をマッチパターンに使えるように、含まれているメタ文字をエスケープする
            </summary>
            <param name="vagueString">The vague.</param>
            <returns>マッチパターンに指定可能なプレーン文字列</returns>
        </member>
        <member name="T:Extensions.JapaneseDateTimeExtensions">
            <summary>
            日付時間のフォーマット出力
            </summary>
            <see cref="!:ToSumpleString">サンプル出力</see>
        </member>
        <member name="P:Extensions.JapaneseDateTimeExtensions.JpCulture">
            <summary>
            Gets the jp culture.
            </summary>
            <value>
            The jp culture.
            </value>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToJpHistoryString(System.DateTime)">
            <summary>
            Jps the year string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>ⅩⅩ(元号)</returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToUsHistoryString(System.DateTime)">
            <summary>
            To the jp short year string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>西暦</returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToJpYearString(System.DateTime)">
            <summary>
            Jps the year string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>元号XX年</returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToUsYearString(System.DateTime)">
            <summary>
            To the jp short year string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>西暦XXXX年</returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToJpWeekString(System.DateTime)">
            <summary>
            Jps the week string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>Ⅹ曜日</returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToJpShortWeekString(System.DateTime)">
            <summary>
            Jps the short week string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>Ⅹ(曜日)</returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToJpMonthString(System.DateTime)">
            <summary>
            To the jp month string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>XX月</returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToJpDateString(System.DateTime)">
            <summary>
            To the jp date string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>XX日</returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToJpHourString(System.DateTime)">
            <summary>
            To the jp hour string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>XX時(24時間制)</returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToJpShortHourString(System.DateTime)">
            <summary>
            To the jp short hour string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>午前・午後XX時</returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToJpMinuteString(System.DateTime)">
            <summary>
            To the jp minute string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>XX分</returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToJpSecondString(System.DateTime)">
            <summary>
            To the jp second string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>XX秒</returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToFormatString(System.DateTime,System.String)">
            <summary>
            To the format string.
            </summary>
            <param name="dateTime">The date time.</param>
            <param name="format">The format.</param>
            <returns></returns>
        </member>
        <member name="M:Extensions.JapaneseDateTimeExtensions.ToJpSumpleString(System.DateTime)">
            <summary>
            To the sumple string.
            </summary>
            <param name="dateTime">The date time.</param>
            <returns>サンプル出力</returns>
        </member>
        <member name="T:Mvvm.AsyncCommand`1">
            <summary>
            
            </summary>
            <remarks>
            <a href="https://msdn.microsoft.com/ja-jp/magazine/dn630647.aspx">非同期 MVVM アプリケーションのパターン: コマンド</a>
            </remarks>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="T:Mvvm.AsyncCommand">
            <summary>
            
            </summary>
            <remarks>
            <a href="https://msdn.microsoft.com/ja-jp/magazine/dn630647.aspx">非同期 MVVM アプリケーションのパターン: コマンド</a>
            </remarks>
        </member>
        <member name="T:Mvvm.AsyncCommandBase">
            <summary>
            
            </summary>
            <remarks>
            <a href="https://msdn.microsoft.com/ja-jp/magazine/dn630647.aspx">非同期 MVVM アプリケーションのパターン: コマンド</a>
            <a href="http://ufcpp.net/study/csharp/MiscEventSubscribe.html">【雑記】イベントの購読とその解除</a>
            <a href="https://qiita.com/Temarin/items/43396f85890c5acb5b30">IDisposableをまとめる方法</a>
            </remarks>
        </member>
        <member name="T:Mvvm.IAsyncCommand">
            <summary>
            
            </summary>
            <remarks>
            <a href="https://msdn.microsoft.com/ja-jp/magazine/dn630647.aspx">非同期 MVVM アプリケーションのパターン: コマンド</a>
            </remarks>
        </member>
        <member name="T:Mvvm.MessengerService">
            <summary>
            
            </summary>
            <remarks>
            <a href="http://gushwell.ldblog.jp/archives/52146779.html">MVVM：Messengerを理解するために自作してみた(1)</a><br/>
            <a href="http://gushwell.ldblog.jp/archives/52146816.html">MVVM：Messengerを理解するために自作してみた(2)</a><br/>
            <a href="http://gushwell.ldblog.jp/archives/52146951.html">MVVM：Messengerを理解するために自作してみた(3)</a><br/>
            <a href="http://gushwell.ldblog.jp/archives/52146964.html">MVVM:Messenger + Behaviorを理解するために自作してみた(1)</a><br/>
            <a href="http://gushwell.ldblog.jp/archives/52146967.html">MVVM:Messenger + Behaviorを理解するために自作してみた(2)</a><br/>
            <a href="http://gushwell.ldblog.jp/archives/52152996.html">MVVM:Messenger + Behaviorを理解するために自作してみた(3)</a><br/>
            </remarks>
        </member>
        <member name="F:Mvvm.MessengerService.RequestNotifyPropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.MessengerService.Requests">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.MessengerService.DataContext">
            <summary>
            Gets or sets the data context.
            </summary>
            <value>
            The data context.
            </value>
        </member>
        <member name="P:Mvvm.MessengerService.TargetView">
            <summary>
            Gets or sets the target.
            </summary>
            <value>
            The target.
            </value>
        </member>
        <member name="M:Mvvm.MessengerService.GetMessenger(System.Windows.DependencyObject)">
            <summary>
            Gets the messenger.
            </summary>
            <param name="obj">The object.</param>
            <returns></returns>
        </member>
        <member name="M:Mvvm.MessengerService.SetMessenger(System.Windows.DependencyObject,Mvvm.MessengerService)">
            <summary>
            Sets the messenger.
            </summary>
            <param name="obj">The object.</param>
            <param name="value">The value.</param>
        </member>
        <member name="F:Mvvm.MessengerService.MessengerProperty">
            <summary>
            The messenger property
            </summary>
        </member>
        <member name="M:Mvvm.MessengerService.GetRequests(System.Windows.FrameworkElement)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <returns></returns>
        </member>
        <member name="M:Mvvm.MessengerService.SetRequests(System.Windows.FrameworkElement,Mvvm.RequestCollection)">
            <summary>
            
            </summary>
            <param name="target"></param>
            <param name="value"></param>
        </member>
        <member name="F:Mvvm.MessengerService.RequestsProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mvvm.MessengerService.SendMessage(System.Type,Mvvm.IMessage)">
            <summary>
            
            </summary>
            <param name="typeOfViewModel"></param>
            <param name="message"></param>
            <returns></returns>
        </member>
        <member name="T:Mvvm.RequestCollection">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mvvm.IMessageRecipient">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.IMessageRecipient.Message">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.IMessageRecipient.Closer">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mvvm.IMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.IMessage.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.IMessage.Content">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mvvm.RequestMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.RequestMessage.Title">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.RequestMessage.Content">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mvvm.IRequest">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.IRequest.RequestAction">
            <summary>
            Gets the action.
            </summary>
            <value>
            The action.
            </value>
        </member>
        <member name="P:Mvvm.IRequest.TypeOfRecipientView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.IRequest.MessageType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mvvm.Request">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mvvm.Request.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mvvm.Request.#ctor(System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="typeOfRecipientView"></param>
            <param name="messageType"></param>
        </member>
        <member name="M:Mvvm.Request.#ctor(System.Type,System.Type,System.Action{Mvvm.IMessage})">
            <summary>
            
            </summary>
            <param name="typeOfRecipientView"></param>
            <param name="messageType"></param>
            <param name="requestAction "></param>
        </member>
        <member name="F:Mvvm.Request.requestAction">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.Request.RequestAction">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mvvm.Request.typeOfRecipientView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.Request.TypeOfRecipientView">
            <summary>
            
            </summary>
        </member>
        <member name="F:Mvvm.Request.messageType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.Request.MessageType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mvvm.PopupWindowRequestToIRequestTypeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mvvm.PopupWindowRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mvvm.PopupWindowRequest.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mvvm.PopupWindowRequest.OnCreateContent(System.Windows.Controls.ContentControl)">
            <summary>
            
            </summary>
            <param name="content"></param>
        </member>
        <member name="M:Mvvm.PopupWindowRequest.#ctor(System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="typeOfRecipientView"></param>
            <param name="messageType"></param>
        </member>
        <member name="P:Mvvm.PopupWindowRequest.TypeOfRecipientView">
            <summary>
            
            </summary>
        </member>
        <member name="P:Mvvm.PopupWindowRequest.MessageType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Mvvm.RecipientView">
            <summary>
            
            </summary>
        </member>
        <member name="M:Mvvm.RecipientView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Mvvm.RecipientView"/> class.
            </summary>
        </member>
        <member name="P:Mvvm.RecipientView.Closer">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:Mvvm.RecipientView"/> is closer.
            </summary>
            <value>
              <c>true</c> if closer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Mvvm.RecipientView.CloserProperty">
            <summary>
            The closer property
            </summary>
        </member>
        <member name="T:Mvvm.NotifyBase">
            <summary>
            ビューモデル等の基底に使うベースクラス
            </summary>
        </member>
        <member name="E:Mvvm.NotifyBase.PropertyChanged">
            <summary>
            変更通知イベント
            </summary>
            <override name="INotifyPropertyChanged"></override>
        </member>
        <member name="M:Mvvm.NotifyBase.OnPropertyChanged(System.String)">
            <summary>
            変更通知イベント起動メソッド
            </summary>
            <param name="propertyName">変更通知するプロパティ名</param>
        </member>
        <member name="M:Mvvm.NotifyBase.SetProperty``1(``0@,``0,System.String)">
            <summary>
            プロパティフィールド代入メソッド
            </summary>
            <typeparam name="T">プロパティフィールドの型</typeparam>
            <param name="storage">プロパティフィールドへの参照</param>
            <param name="value">プロパティフィールドへの代入値</param>
            <param name="propertyName">プロパティ名</param>
            <returns>True=フィールド値が変更された,False=されなかった</returns>
        </member>
        <member name="T:Mvvm.BindableBase">
            <summary>
            ビューモデル等の基底に使うベースクラス
            </summary>
            <inherited name="INotifyPropertyChanged">プロパティ変更通知</inherited>
            <inherited name="INotifyDataErrorInfo">プロパティ検証エラー通知</inherited>
        </member>
        <member name="M:Mvvm.BindableBase.#ctor">
            <summary>
            基底コンストラクタ
            </summary>
        </member>
        <member name="F:Mvvm.BindableBase.hasErrors">
            <summary>
            検証エラーがあるプロパティ名と検証エラーメッセージのリスト
            </summary>
        </member>
        <member name="P:Mvvm.BindableBase.HasErrors">
            <summary>
            検証エラー状態
            </summary>
            <override name="INotifyDataErrorInfo"></override>
            <returns>True=エラーあり,False=エラーなし</returns>
        </member>
        <member name="E:Mvvm.BindableBase.ErrorsChanged">
            <summary>
            検証エラー通知イベント
            </summary>
            <override name="INotifyDataErrorInfo"></override>
        </member>
        <member name="M:Mvvm.BindableBase.OnErrorsChanged(System.String,System.String)">
            <summary>
            プロパティの検証後に呼び出す。検証エラー通知イベント起動メソッド
            </summary>
            <override name="INotifyPropertyChanged"></override>
            <param name="errorMessage">nullまたは空の文字列でエラーなしまたはエラー状態解除、空白文字列または文字列はエラー状態メッセージ</param>
            <param name="propertyName">エラー状態にあるプロパティ名</param>
        </member>
        <member name="M:Mvvm.BindableBase.SetError(System.String,System.String)">
            <summary>
            プロパティの検証後にエラー状態なら呼び出す。検証エラー通知イベント起動メソッドを呼び出す
            </summary>
            <param name="errorMessage">エラーメッセージ、メッセージが空なら自動生成</param>
            <param name="propertyName">エラー状態のプロパティ名</param>
        </member>
        <member name="M:Mvvm.BindableBase.ResetError(System.String)">
            <summary>
            プロパティの検証後にエラー状態解除なら呼び出す。検証エラー通知イベント起動メソッドを呼び出す
            </summary>
            <param name="propertyName">エラー解除状態のプロパティ名</param>
        </member>
        <member name="M:Mvvm.BindableBase.GetErrors(System.String)">
            <summary>
            エラー状態プロパティのエラーメッセージ
            </summary>
            <param name="propertyName">プロパティ名</param>
            <returns>指定したプロパティのエラーメッセージ</returns>
        </member>
        <member name="T:Mvvm.INavigationStory">
            <summary>
            ページ遷移時のアニメーションを実行するインターフェース
            </summary>
        </member>
        <member name="M:Mvvm.INavigationStory.Initialize(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            アニメーション再生の為のイニシャライザ
            </summary>
            <param name="fromContent">遷移元ページ</param>
            <param name="toContent">遷移先ページ</param>
            <param name="endAnimation">アニメーション終了時のイベントハンドラ</param>
            <returns>アニメーションを再生するコンテント</returns>
        </member>
        <member name="M:Mvvm.INavigationStory.Animate(System.Action{System.Windows.FrameworkElement})">
            <summary>
            アニメーション再生
            </summary>
        </member>
        <member name="T:Mvvm.NavigationServiceEx">
            <summary>
            ページナビゲーションを行うクラス
            </summary>
            <remarks><a href="http://sourcechord.hatenablog.com/entry/2016/02/01/003758">WPFでシンプルな独自ナビゲーション処理のサンプルを書いてみた</a></remarks>
        </member>
        <member name="P:Mvvm.NavigationServiceEx.HistoryTracingAnimation">
            <summary>
            Gets or sets a value indicating whether [history tracing animation].
            </summary>
            <value>
              <c>true</c> if [history tracing animation]; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Mvvm.NavigationServiceEx.HistoryTracingAnimationProperty">
            <summary>
            The history tracing animation property
            </summary>
        </member>
        <member name="P:Mvvm.NavigationServiceEx.CanNavigation">
            <summary>
            Gets or sets a value indicating whether this instance can navigation.
            </summary>
            <value>
              <c>true</c> if this instance can navigation; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Mvvm.NavigationServiceEx.CanNavigationProperty">
            <summary>
            The can navigation property
            </summary>
        </member>
        <member name="P:Mvvm.NavigationServiceEx.CanUndo">
            <summary>
            Gets or sets a value indicating whether this instance can undo.
            </summary>
            <value>
              <c>true</c> if this instance can undo; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Mvvm.NavigationServiceEx.CanUndoProperty">
            <summary>
            The can undo property
            </summary>
        </member>
        <member name="P:Mvvm.NavigationServiceEx.CanRedo">
            <summary>
            Gets or sets a value indicating whether this instance can redo.
            </summary>
            <value>
              <c>true</c> if this instance can redo; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Mvvm.NavigationServiceEx.CanRedoProperty">
            <summary>
            The can redo property
            </summary>
        </member>
        <member name="P:Mvvm.NavigationServiceEx.Content">
            <summary>
            ページナビゲーションを行う領域となるContentControlを保持するAccessor
            </summary>
        </member>
        <member name="F:Mvvm.NavigationServiceEx.ContentProperty">
            <summary>
            ページナビゲーションを行う領域となるContentControlを保持するプロパティ
            </summary>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.Navigate(System.Windows.FrameworkElement)">
            <summary>
            view引数で指定されたインスタンスのページへとナビゲーションを行います。
            </summary>
            <param name="view">遷移先ページのインスタンス</param>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.Navigate(System.Type)">
            <summary>
            viewType引数で指定された型のインスタンスを生成し、そのインスタンスのページへとナビゲーションを行います。
            </summary>
            <param name="viewType">遷移先ページのType</param>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.OnGoToPage(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            NavigationCommands.GoToPageコマンドに対する応答処理
            </summary>
            <param name="sender">未使用</param>
            <param name="e">e.Parameterに遷移するページのType</param>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.OnPreviousPage(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            NavigationCommands.PreviousPageコマンドに対する応答処理
            </summary>
            <param name="sender">未使用</param>
            <param name="e">e.Parameterに遷移するページのType</param>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.OnNextPage(System.Object,System.Windows.Input.ExecutedRoutedEventArgs)">
            <summary>
            NavigationCommands.NextPageコマンドに対する応答処理
            </summary>
            <param name="sender">未使用</param>
            <param name="e">e.Parameterに遷移するページのType</param>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.GetNavigationStory(System.Windows.DependencyObject)">
            <summary>
            ページ遷移アニメーションのゲッター
            </summary>
            <param name="obj">添付されたDependencyObject</param>
            <returns>ページ遷移時のアニメーションを実行するインターフェース</returns>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.SetNavigationStory(System.Windows.DependencyObject,Mvvm.INavigationStory)">
            <summary>
            ページ遷移アニメーションのセッター
            </summary>
            <param name="obj">添付されるDependencyObject</param>
            <param name="value">ページ遷移時のアニメーションを実行するインターフェース</param>
        </member>
        <member name="F:Mvvm.NavigationServiceEx.NavigationStoryProperty">
            <summary>
            ページ遷移時のアニメーションを実行するインターフェースの添付プロパティ
            </summary>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.GetTarget(System.Windows.DependencyObject)">
            <summary>
            ページ遷移を実現するエリアのゲッター
            </summary>
            <param name="obj">添付されたDependencyObject</param>
            <returns>添付されたContentControl</returns>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.SetTarget(System.Windows.DependencyObject,System.Windows.Controls.ContentControl)">
            <summary>
            ページ遷移を実現するエリアのセッター
            </summary>
            <param name="obj">添付されるDependencyObject</param>
            <param name="value">設定するContentControl</param>
        </member>
        <member name="F:Mvvm.NavigationServiceEx.TargetProperty">
            <summary>
            ページ遷移を実現するエリア。ContentControlを指定すること。
            </summary>
            <remarks>この添付プロパティで指定した値は、NavigationServiceEx.Contentプロパティとバインドして同期するようにして扱う。</remarks>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.GetStartup(System.Windows.DependencyObject)">
            <summary>
            初期ページを指定するプロパティのゲッター
            </summary>
            <param name="obj">添付されたDependencyObject</param>
            <returns>添付された初期ページのType</returns>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.SetStartup(System.Windows.DependencyObject,System.Type)">
            <summary>
            初期ページを指定するプロパティのセッター
            </summary>
            <param name="obj">添付されるDependencyObject</param>
            <param name="value">添付する初期ページのType</param>
        </member>
        <member name="F:Mvvm.NavigationServiceEx.StartupProperty">
            <summary>
            初期ページを指定するプロパティ
            </summary>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.GetNavigator(System.Windows.DependencyObject)">
            <summary>
            アタッチしたNavigationServiceEx添付プロパティのゲッター
            </summary>
            <param name="obj">添付されたDependencyObject</param>
            <returns>添付されたNavigationServiceEx</returns>
        </member>
        <member name="M:Mvvm.NavigationServiceEx.SetNavigator(System.Windows.DependencyObject,Mvvm.NavigationServiceEx)">
            <summary>
            アタッチしたNavigationServiceEx添付プロパティのセッター
            </summary>
            <param name="obj">添付されるDependencyObject</param>
            <param name="value">添付するNavigationServiceEx</param>
        </member>
        <member name="F:Mvvm.NavigationServiceEx.NavigatorProperty">
            <summary>
            任意のコントロールに対して、NavigationServiceExをアタッチできるようにするための添付プロパティ
            </summary>
        </member>
        <member name="T:Mvvm.NavigationServiceExtensions">
            <summary>
            ページナビゲートのための拡張メソッド定義クラス
            </summary>
        </member>
        <member name="M:Mvvm.NavigationServiceExtensions.Navigate(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            view引数で指定されたインスタンスのページへとナビゲーションを行います。
            </summary>
            <param name="element">ターゲットを添付したFrameworkElement</param>
            <param name="view">遷移先ページ</param>
        </member>
        <member name="M:Mvvm.NavigationServiceExtensions.Navigate(System.Windows.FrameworkElement,System.Type)">
            <summary>
            viewType引数で指定された型のインスタンスを生成し、そのインスタンスのページへとナビゲーションを行います。
            </summary>
            <param name="element">ターゲットを添付したFrameworkElement</param>
            <param name="viewType">遷移先ページのType</param>
        </member>
        <member name="T:MvvmOption.ConfirmationDialogType">
            <summary>
            
            </summary>
        </member>
        <member name="F:MvvmOption.ConfirmationDialogType.Ok">
            <summary>
            The ok
            </summary>
        </member>
        <member name="F:MvvmOption.ConfirmationDialogType.OkCancel">
            <summary>
            The ok cancel
            </summary>
        </member>
        <member name="F:MvvmOption.ConfirmationDialogType.YesNoCancel">
            <summary>
            The yes no cancel
            </summary>
        </member>
        <member name="T:MvvmOption.ConfirmationDialogResult">
            <summary>
            
            </summary>
        </member>
        <member name="F:MvvmOption.ConfirmationDialogResult.None">
            <summary>
            The none
            </summary>
        </member>
        <member name="F:MvvmOption.ConfirmationDialogResult.Ok">
            <summary>
            The ok
            </summary>
        </member>
        <member name="F:MvvmOption.ConfirmationDialogResult.Cancel">
            <summary>
            The cancel
            </summary>
        </member>
        <member name="F:MvvmOption.ConfirmationDialogResult.Yes">
            <summary>
            The yes
            </summary>
        </member>
        <member name="F:MvvmOption.ConfirmationDialogResult.No">
            <summary>
            The no
            </summary>
        </member>
        <member name="T:MvvmOption.ConfirmationDialogRequestMessage">
            <summary>
            
            </summary>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogRequestMessage.Button1Text">
            <summary>
            Gets or sets the button1 text.
            </summary>
            <value>
            The button1 text.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogRequestMessage.Button2Text">
            <summary>
            Gets or sets the button2 text.
            </summary>
            <value>
            The button2 text.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogRequestMessage.Button3Text">
            <summary>
            Gets or sets the button3 text.
            </summary>
            <value>
            The button3 text.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogRequestMessage.ConfirmationDialogResult">
            <summary>
            Gets or sets the confirmation dialog result.
            </summary>
            <value>
            The confirmation dialog result.
            </value>
        </member>
        <member name="T:MvvmOption.ConfirmationDialogRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:MvvmOption.ConfirmationDialogRequest.#ctor(System.Type,System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:MvvmOption.ConfirmationDialogRequest"/> class.
            </summary>
        </member>
        <member name="T:MvvmOption.OkDialogContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:MvvmOption.OkDialogContent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MvvmOption.OkDialogContent"/> class.
            </summary>
        </member>
        <member name="T:MvvmOption.OkDialogRequestMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:MvvmOption.OkDialogRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:MvvmOption.OkDialogRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MvvmOption.OkDialogRequest"/> class.
            </summary>
        </member>
        <member name="T:MvvmOption.OkCancelDialogContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:MvvmOption.OkCancelDialogContent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MvvmOption.OkCancelDialogContent"/> class.
            </summary>
        </member>
        <member name="T:MvvmOption.OkCancelDialogRequestMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:MvvmOption.OkCancelDialogRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:MvvmOption.OkCancelDialogRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MvvmOption.OkCancelDialogRequest"/> class.
            </summary>
        </member>
        <member name="T:MvvmOption.YesNoCancelDialogContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:MvvmOption.YesNoCancelDialogContent.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MvvmOption.YesNoCancelDialogContent"/> class.
            </summary>
        </member>
        <member name="T:MvvmOption.YesNoCancelDialogRequestMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:MvvmOption.YesNoCancelDialogRequestToIRequestTypeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:MvvmOption.YesNoCancelDialogRequest">
            <summary>
            
            </summary>
        </member>
        <member name="M:MvvmOption.YesNoCancelDialogRequest.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:MvvmOption.YesNoCancelDialogRequest"/> class.
            </summary>
        </member>
        <member name="T:MvvmOption.ConfirmationDialogContent">
            <summary>
            
            </summary>
        </member>
        <member name="M:MvvmOption.ConfirmationDialogContent.#ctor(MvvmOption.ConfirmationDialogType)">
            <summary>
            Initializes a new instance of the <see cref="T:MvvmOption.ConfirmationDialogContent"/> class.
            </summary>
            <param name="dialogType">Type of the dialog.</param>
        </member>
        <member name="T:MvvmOption.ConfirmationDialogContentViewModel">
            <summary>
            
            </summary>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.Closer">
            <summary>
            Gets or sets a value indicating whether this <see cref="T:MvvmOption.ConfirmationDialogContentViewModel"/> is closer.
            </summary>
            <value>
              <c>true</c> if closer; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.Text">
            <summary>
            Gets the text.
            </summary>
            <value>
            The text.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.Button1Command">
            <summary>
            Gets the button1 command.
            </summary>
            <value>
            The button1 command.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.Button2Command">
            <summary>
            Gets the button2 command.
            </summary>
            <value>
            The button2 command.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.Button3Command">
            <summary>
            Gets the button3 command.
            </summary>
            <value>
            The button3 command.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.Button1Text">
            <summary>
            Gets the button1 text.
            </summary>
            <value>
            The button1 text.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.Button2Text">
            <summary>
            Gets the button2 text.
            </summary>
            <value>
            The button2 text.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.Button3Text">
            <summary>
            Gets the button3 text.
            </summary>
            <value>
            The button3 text.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.Button1Visibility">
            <summary>
            Gets the button1 visibility.
            </summary>
            <value>
            The button1 visibility.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.Button2Visibility">
            <summary>
            Gets the button2 visibility.
            </summary>
            <value>
            The button2 visibility.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.Button3Visibility">
            <summary>
            Gets the button3 visibility.
            </summary>
            <value>
            The button3 visibility.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.RequestMessage">
            <summary>
            Gets or sets the request message.
            </summary>
            <value>
            The request message.
            </value>
        </member>
        <member name="P:MvvmOption.ConfirmationDialogContentViewModel.Message">
            <summary>
            Gets or sets the message.
            </summary>
            <value>
            The message.
            </value>
        </member>
        <member name="M:MvvmOption.ConfirmationDialogContentViewModel.#ctor(MvvmOption.ConfirmationDialogType)">
            <summary>
            Initializes a new instance of the <see cref="T:MvvmOption.ConfirmationDialogContentViewModel"/> class.
            </summary>
            <param name="dialogType">Type of the dialog.</param>
        </member>
        <member name="T:MvvmOption.DefaultOpenFileDialogRequestToIRequestTypeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:MvvmOption.DefaultOpenFileDialogRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:MvvmOption.DefaultSaveFileDialogRequestToIRequestTypeConverter">
            <summary>
            
            </summary>
        </member>
        <member name="T:MvvmOption.DefaultSaveFileDialogRequest">
            <summary>
            
            </summary>
        </member>
        <member name="T:MvvmOption.SimpleWipeNavigationStory">
            <summary>
            シンプルなワイプ系のアニメーション
            </summary>
            <remarks><a href="http://techoh.net/wpf-control-storyboard-with-code/">2分でできるC#コードからWPFのアニメーションを操る方法</a></remarks>
        </member>
        <member name="T:MvvmOption.SimpleWipeNavigationStory.WipeNavigationMode">
            <summary>
            ワイプアニメーションのタイプ定義
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleWipeNavigationStory.WipeNavigationMode.CenterSpread">
            <summary>
            遷移先が中心から広がる
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleWipeNavigationStory.WipeNavigationMode.HorizontalSpread">
            <summary>
            遷移先が水平方向に広がる
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleWipeNavigationStory.WipeNavigationMode.VerticalSpread">
            <summary>
            遷移先が垂直方向に広がる
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleWipeNavigationStory.WipeNavigationMode.CenterNarrowed">
            <summary>
            遷移元が中心に窄まる
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleWipeNavigationStory.WipeNavigationMode.HorizontalNarrowed">
            <summary>
            遷移元が左右から中心に窄まる
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleWipeNavigationStory.WipeNavigationMode.VerticalNarrowed">
            <summary>
            遷移元が上下から中心に窄まる
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleWipeNavigationStory.WipeNavigationMode.LeftToHorizontal">
            <summary>
            遷移先が左から右に水平方向に広がる
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleWipeNavigationStory.WipeNavigationMode.RightToHorizontal">
            <summary>
            遷移先が右から左に水平方向に広がる
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleWipeNavigationStory.WipeNavigationMode.TopToVertical">
            <summary>
            遷移先が上から下に垂直方向に広がる
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleWipeNavigationStory.WipeNavigationMode.BottomToVertical">
            <summary>
            遷移先が下から上に垂直方向に広がる
            </summary>
        </member>
        <member name="P:MvvmOption.SimpleWipeNavigationStory.NavigationMode">
            <summary>
            再生するワイプアニメーションのタイプ
            </summary>
        </member>
        <member name="P:MvvmOption.SimpleWipeNavigationStory.Duration">
            <summary>
            アニメーションの再生時間
            </summary>
        </member>
        <member name="M:MvvmOption.SimpleWipeNavigationStory.Initialize(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            アニメーション再生の為のイニシャライザ
            </summary>
            <param name="fromContent">遷移元ページ</param>
            <param name="toContent">遷移先ページ</param>
            <returns>アニメーションを再生するコンテント</returns>
        </member>
        <member name="M:MvvmOption.SimpleWipeNavigationStory.Animate(System.Action{System.Windows.FrameworkElement})">
            <summary>
            アニメーション再生
            </summary>
            <param name="endAnimation">アニメーション終了時のイベントハンドラ</param>
        </member>
        <member name="T:MvvmOption.SimpleRaiseNavigationStory">
            <summary>
            シンプルなスライド系のアニメーション
            </summary>
            <remarks><a href="http://techoh.net/wpf-control-storyboard-with-code/">2分でできるC#コードからWPFのアニメーションを操る方法</a></remarks>
        </member>
        <member name="T:MvvmOption.SimpleRaiseNavigationStory.RaiseNavigationMode">
            <summary>
            スライドアニメーションのタイプ定義
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleRaiseNavigationStory.RaiseNavigationMode.RightToLeft">
            <summary>
            遷移先ページが右側からスライド
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleRaiseNavigationStory.RaiseNavigationMode.LeftToRight">
            <summary>
            遷移先ページが左側からスライド
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleRaiseNavigationStory.RaiseNavigationMode.BottomToTop">
            <summary>
            遷移先ページが下側からスライド
            </summary>
        </member>
        <member name="F:MvvmOption.SimpleRaiseNavigationStory.RaiseNavigationMode.TopToBottom">
            <summary>
            遷移先ページが上側からスライド
            </summary>
        </member>
        <member name="P:MvvmOption.SimpleRaiseNavigationStory.NavigationMode">
            <summary>
            再生するスライドアニメーションのタイプ
            </summary>
        </member>
        <member name="P:MvvmOption.SimpleRaiseNavigationStory.Duration">
            <summary>
            アニメーションの再生時間
            </summary>
        </member>
        <member name="M:MvvmOption.SimpleRaiseNavigationStory.Initialize(System.Windows.FrameworkElement,System.Windows.FrameworkElement)">
            <summary>
            アニメーション再生の為のイニシャライザ
            </summary>
            <param name="fromContent">遷移元ページ</param>
            <param name="toContent">遷移先ページ</param>
            <returns>アニメーションを再生するコンテント</returns>
        </member>
        <member name="M:MvvmOption.SimpleRaiseNavigationStory.Animate(System.Action{System.Windows.FrameworkElement})">
            <summary>
            アニメーション再生
            </summary>
            <param name="endAnimation">アニメーション終了時のイベントハンドラ</param>
        </member>
        <member name="T:Utilitys.ColorPlus">
            <summary>
            
            </summary>
            <remarks><a href="http://www.losttechnology.jp/WebDesign/colorlist.html">さまざまな色一覧</a></remarks>
        </member>
        <member name="T:Utilitys.GridLengthAnimation">
            <summary>
            Animates a grid length value just like the DoubleAnimation animates a double value
            </summary>
        </member>
        <member name="P:Utilitys.GridLengthAnimation.IsCompleted">
            <summary>
            Marks the animation as completed
            </summary>
        </member>
        <member name="P:Utilitys.GridLengthAnimation.ReverseValue">
            <summary>
            Sets the reverse value for the second animation
            </summary>
        </member>
        <member name="F:Utilitys.GridLengthAnimation.ReverseValueProperty">
            <summary>
            Dependency property. Sets the reverse value for the second animation
            </summary>
        </member>
        <member name="P:Utilitys.GridLengthAnimation.TargetPropertyType">
            <summary>
            Returns the type of object to animate
            </summary>
        </member>
        <member name="M:Utilitys.GridLengthAnimation.CreateInstanceCore">
            <summary>
            Creates an instance of the animation object
            </summary>
            <returns>Returns the instance of the GridLengthAnimation</returns>
        </member>
        <member name="F:Utilitys.GridLengthAnimation.FromProperty">
            <summary>
            Dependency property for the From property
            </summary>
        </member>
        <member name="P:Utilitys.GridLengthAnimation.From">
            <summary>
            CLR Wrapper for the From depenendency property
            </summary>
        </member>
        <member name="F:Utilitys.GridLengthAnimation.ToProperty">
            <summary>
            Dependency property for the To property
            </summary>
        </member>
        <member name="P:Utilitys.GridLengthAnimation.To">
            <summary>
            CLR Wrapper for the To property
            </summary>
        </member>
        <member name="M:Utilitys.GridLengthAnimation.VerifyAnimationCompletedStatus(System.Windows.Media.Animation.AnimationClock)">
            <summary>
            registers to the completed event of the animation clock
            </summary>
            <param name="clock">the animation clock to notify completion status</param>
        </member>
        <member name="M:Utilitys.GridLengthAnimation.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)">
            <summary>
            Animates the grid let set
            </summary>
            <param name="defaultOriginValue">The original value to animate</param>
            <param name="defaultDestinationValue">The final value</param>
            <param name="animationClock">The animation clock (timer)</param>
            <returns>Returns the new grid length to set</returns>
        </member>
        <member name="T:Utilitys.ExpanderDoubleAnimation">
            <summary>
            Animates a double value 
            </summary>
        </member>
        <member name="F:Utilitys.ExpanderDoubleAnimation.FromProperty">
            <summary>
            Dependency property for the From property
            </summary>
        </member>
        <member name="P:Utilitys.ExpanderDoubleAnimation.From">
            <summary>
            CLR Wrapper for the From depenendency property
            </summary>
        </member>
        <member name="F:Utilitys.ExpanderDoubleAnimation.ToProperty">
            <summary>
            Dependency property for the To property
            </summary>
        </member>
        <member name="P:Utilitys.ExpanderDoubleAnimation.To">
            <summary>
            CLR Wrapper for the To property
            </summary>
        </member>
        <member name="P:Utilitys.ExpanderDoubleAnimation.ReverseValue">
            <summary>
            Sets the reverse value for the second animation
            </summary>
        </member>
        <member name="F:Utilitys.ExpanderDoubleAnimation.ReverseValueProperty">
            <summary>
            Sets the reverse value for the second animation
            </summary>
        </member>
        <member name="M:Utilitys.ExpanderDoubleAnimation.CreateInstanceCore">
            <summary>
            Creates an instance of the animation
            </summary>
            <returns></returns>
        </member>
        <member name="M:Utilitys.ExpanderDoubleAnimation.GetCurrentValueCore(System.Double,System.Double,System.Windows.Media.Animation.AnimationClock)">
            <summary>
            Animates the double value
            </summary>
            <param name="defaultOriginValue">The original value to animate</param>
            <param name="defaultDestinationValue">The final value</param>
            <param name="animationClock">The animation clock (timer)</param>
            <returns>Returns the new double to set</returns>
        </member>
        <member name="T:Utilitys.LogType">
            <summary>
            ログタイプ
            </summary>
        </member>
        <member name="F:Utilitys.LogType.Information">
            <summary>
            通常ログ
            </summary>
        </member>
        <member name="F:Utilitys.LogType.Debug">
            <summary>
            デバッグ用ログ
            </summary>
            <remarks>DEBUGシンボル指定時のみログされる</remarks>
        </member>
        <member name="F:Utilitys.LogType.Error">
            <summary>
            エラーログ
            </summary>
        </member>
        <member name="T:Utilitys.Logger">
            <summary>
            ログクラス
            </summary>
        </member>
        <member name="P:Utilitys.Logger.LogFormat">
            <summary>
            ログ文字列の整形フォーマット
            </summary>
            <value>
            整形フォーマット
            </value>
            <remarks>フォーマット文字列内の'{MSG}'をログメッセージに置換、フォーマット文字列内の'{LGT}'ログタイプに置換
            デフォルト値 "{LGT}[{YY}-{MM}-{dd} {hh}:{mm}:{ss}:{ff}] -> '{MSG}'"</remarks>
            <seealso cref="T:Extensions.JapaneseDateTimeExtensions"/>
        </member>
        <member name="P:Utilitys.Logger.LogFilePath">
            <summary>
            ロギングを行うファイルパス
            </summary>
            <value>
            ログファイルパス
            </value>
        </member>
        <member name="P:Utilitys.Logger.FileEncoding">
            <summary>
            ログファイルのエンコードタイプ
            </summary>
            <value>
            ファイルエンコードタイプ
            </value>
        </member>
        <member name="M:Utilitys.Logger.Write(Utilitys.LogType,System.String)">
            <summary>
            Writes the specified log type.
            </summary>
            <param name="logType">Type of the log.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Utilitys.Logger.Write(System.String,System.String)">
            <summary>
            Writes the specified log type.
            </summary>
            <param name="logType">Type of the log.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Utilitys.Logger.Write(System.String,System.String,System.String)">
            <summary>
            Writes the specified log format.
            </summary>
            <param name="logFormat">The log format.</param>
            <param name="logType">Type of the log.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Utilitys.Logger.Write(System.String)">
            <summary>
            Writes the specified message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Utilitys.Logger.Write(System.Exception,System.String)">
            <summary>
            Writes the specified exception.
            </summary>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:Utilitys.Logger.Reflash">
            <summary>
            Reflashes this instance.
            </summary>
        </member>
        <member name="T:Utilitys.HistoryStack`1">
            <summary>
            アンドゥ、リドゥ機能スタック
            </summary>
            <typeparam name="T">保持するオブジェクト</typeparam>
        </member>
        <member name="M:Utilitys.HistoryStack`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Utilitys.HistoryStack`1"/> class.
            </summary>
        </member>
        <member name="P:Utilitys.HistoryStack`1.CanUndo">
            <summary>
            Gets a value indicating whether this instance can undo.
            </summary>
            <value>
              <c>true</c> if this instance can undo; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Utilitys.HistoryStack`1.CanRedo">
            <summary>
            Gets a value indicating whether this instance can redo.
            </summary>
            <value>
              <c>true</c> if this instance can redo; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:Utilitys.HistoryStack`1.Undo">
            <summary>
            Undoes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Utilitys.HistoryStack`1.Redo">
            <summary>
            Redoes this instance.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Utilitys.HistoryStack`1.Push(`0)">
            <summary>
            Pushes the specified t.
            </summary>
            <param name="t">The t.</param>
        </member>
        <member name="M:Utilitys.HistoryStack`1.Rewind">
            <summary>
            ポイント位置までクリアします
            </summary>
        </member>
        <member name="M:Utilitys.HistoryStack`1.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources.
            </summary>
        </member>
        <member name="T:Utilitys.NotifyTaskCompletion`1">
            <summary>
            
            </summary>
            <remarks><a href="https://msdn.microsoft.com/magazine/dn605875">非同期 MVVM アプリケーションのパターン: データ バインド</a></remarks>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="T:Utilitys.PathBuilder">
            <summary>
            パス文字列校正クラス
            <br/>
            </summary>
        </member>
        <member name="P:Utilitys.PathBuilder.FullPath">
            <summary>
            フルパスプロパティ
            <br/>
            ￥終端はルートまたはディレクトリ
            <br/>
            それ以外はファイル名またはパス付ファイル名
            <br/>
            </summary>
        </member>
        <member name="P:Utilitys.PathBuilder.IsFullPathVerified">
            <summary>
            FullPathプロパティの検証結果
            </summary>
        </member>
        <member name="P:Utilitys.PathBuilder.IsExists">
            <summary>
            ファイルの存在、アクセス権の確認
            </summary>
        </member>
        <member name="P:Utilitys.PathBuilder.FilePath">
            <summary>
            ファイルパスプロパティ
            <br/>
            必ず￥終端
            </summary>
        </member>
        <member name="P:Utilitys.PathBuilder.IsFilePathVerified">
            <summary>
            FilePathプロパティの検証結果
            </summary>
        </member>
        <member name="P:Utilitys.PathBuilder.FileName">
            <summary>
            ファイル名プロパティ
            <br/>
            </summary>
        </member>
        <member name="P:Utilitys.PathBuilder.Extension">
            <summary>
            拡張子の取り出し、変更を行います
            拡張子があれば取り出しは必ず.からの拡張子
            </summary>
        </member>
        <member name="P:Utilitys.PathBuilder.IsFileNameVerified">
            <summary>
            FileNameプロパティの検証結果
            </summary>
        </member>
        <member name="M:Utilitys.PathBuilder.#ctor">
            <summary>
            PathBuilderコンストラクタ
            </summary>
        </member>
        <member name="M:Utilitys.PathBuilder.#ctor(System.String)">
            <summary>
            フルパス指定コンストラクタ
            </summary>
            <param name="fullPath"><see cref="P:Utilitys.PathBuilder.FullPath"/></param>
        </member>
        <member name="T:Utilitys.SingleBootableApp">
            <summary>
            WPFアプリケーション基底クラス<br/>
            スタートアップクラスAppの基底クラスApplicationと差し替えて使う、xamlの基底クラスも差し替える<br/>
            2重起動防止機能<br/>
            <see cref="M:Utilitys.SingleBootableApp.OnConstructor"/>をオーバーライドしてアプリケーションの開始処理を行える<br/>
            <see cref="M:Utilitys.SingleBootableApp.OnDestructor"/>をオーバーライドしてアプリケーションの終了処理を行える<br/>
            <see cref="M:Utilitys.SingleBootableApp.OnUnhandledException(System.Exception,System.Int32@)"/>をオーバーライドしてキャッチされなかった例外処理を行える<br/>
            </summary>
            <remarks><a href="http://kisuke0303.sakura.ne.jp/blog/?p=182">WPF で二重起動を防止する</a><br/>
            <a href="http://www.geocities.jp/litorud/WPF.html#9">二重起動を防止し、起動中のウィンドウをアクティブにする</a></remarks>
        </member>
        <member name="P:Utilitys.SingleBootableApp.StartupFile">
            <summary>
            Gets the startup path.
            </summary>
            <value>
            The startup path.
            </value>
        </member>
        <member name="P:Utilitys.SingleBootableApp.ApplicationName">
            <summary>
            Gets the name of the application.
            </summary>
            <value>
            The name of the application.
            </value>
        </member>
        <member name="M:Utilitys.SingleBootableApp.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Utilitys.SingleBootableApp"/> class.
            </summary>
        </member>
        <member name="M:Utilitys.SingleBootableApp.OnStartup(System.Windows.StartupEventArgs)">
            <summary>
            二重起動防止の処理を行い、<see cref="M:Utilitys.SingleBootableApp.OnConstructor"/>を呼び出す<br/>
              <see cref="E:System.Windows.Application.Startup" /> イベントを発生させます。
            </summary>
            <param name="e">イベント データを格納している <see cref="T:System.Windows.StartupEventArgs" />。</param>
        </member>
        <member name="M:Utilitys.SingleBootableApp.SingleBootableApp_DispatcherUnhandledException(System.Object,System.Windows.Threading.DispatcherUnhandledExceptionEventArgs)">
            <summary>
            キャッチされなかった例外のハンドラ、<see cref="M:Utilitys.SingleBootableApp.OnUnhandledException(System.Exception,System.Int32@)"/>をコールして終了コードを拾得する
            </summary>
            <param name="sender">The source of the event.</param>
            <param name="e">The <see cref="T:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Utilitys.SingleBootableApp.OnUnhandledException(System.Exception,System.Int32@)">
            <summary>
            Called when [unhandled exception].
            </summary>
            <param name="e">The e.</param>
            <param name="errorCode">The error code.</param>
        </member>
        <member name="M:Utilitys.SingleBootableApp.OnConstructor">
            <summary>
            Called when [constructor].
            </summary>
        </member>
        <member name="M:Utilitys.SingleBootableApp.OnDestructor">
            <summary>
            Called when [destructor].
            </summary>
        </member>
        <member name="M:Utilitys.SingleBootableApp.OnExit(System.Windows.ExitEventArgs)">
            <summary>
              <see cref="E:System.Windows.Application.Exit" /> イベントを発生させます。
            </summary>
            <param name="e">イベント データを格納している <see cref="T:System.Windows.ExitEventArgs" />。</param>
        </member>
        <member name="F:Utilitys.SingleBootableApp.applicationId">
            <summary>
            実際はUUIDなどが良い。
            </summary>
        </member>
        <member name="F:Utilitys.SingleBootableApp.mutex">
            <summary>
            起動フラグ用ミューテックス
            アプリケーション名使用
            </summary>
        </member>
        <member name="M:Utilitys.SingleBootableApp.DoubleBootCheckAndRegist">
            <summary>
            スタートアップ時のミューテックスのチェックと拾得
            </summary>
        </member>
        <member name="M:Utilitys.SingleBootableApp.DoubleBootRelease">
            <summary>
            終了時のミューテックスの解放
            </summary>
        </member>
        <member name="T:Utilitys.SingleBootableApp.IpcHandler">
            <summary>
            IPC用ハンドラ
            </summary>
        </member>
        <member name="T:XamlGeneratedNamespace.GeneratedInternalTypeHelper">
            <summary>
            GeneratedInternalTypeHelper
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateInstance(System.Type,System.Globalization.CultureInfo)">
            <summary>
            CreateInstance
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.GetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Globalization.CultureInfo)">
            <summary>
            GetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.SetPropertyValue(System.Reflection.PropertyInfo,System.Object,System.Object,System.Globalization.CultureInfo)">
            <summary>
            SetPropertyValue
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.CreateDelegate(System.Type,System.Object,System.String)">
            <summary>
            CreateDelegate
            </summary>
        </member>
        <member name="M:XamlGeneratedNamespace.GeneratedInternalTypeHelper.AddEventHandler(System.Reflection.EventInfo,System.Object,System.Delegate)">
            <summary>
            AddEventHandler
            </summary>
        </member>
    </members>
</doc>
